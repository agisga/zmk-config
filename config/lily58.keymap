/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_voldn {
            timeout-ms = <50>;
            key-positions = <26 38>;
            bindings = <&kp C_VOL_DN>;
        };

        combo_volup {
            timeout-ms = <50>;
            key-positions = <27 39>;
            bindings = <&kp C_VOL_UP>;
        };

        combo_prev_ws {
            timeout-ms = <50>;
            key-positions = <28 40>;
            bindings = <&kp LC(LEFT)>;
        };

        combo_next_ws {
            timeout-ms = <50>;
            key-positions = <29 41>;
            bindings = <&kp LC(RIGHT)>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   [    |  |  ]    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ctrl | =    | cmd  | ENTER  |  | SPACE | BSPC | RAISE | DEL   |
//               hold: |(ctrl)| (alt)|(cmd) |        |  |       |      |       |       |
      bindings = <
&kp GRAVE       &kp N1    &kp N2    &kp N3     &kp N4        &kp N5                                     &kp N6     &kp N7     &kp N8      &kp N9    &kp N0    &kp MINUS
&kp TAB         &kp Q     &kp W     &kp E      &kp R         &kp T                                      &kp Y      &kp U      &kp I       &kp O     &kp P     &kp BSLH
&kp CAPSLOCK    &kp A     &kp S     &kp D      &kp F         &kp G                                      &kp H      &kp J      &kp K       &kp L     &kp SEMI  &kp SQT
&kp LSHFT       &kp Z     &kp X     &kp C      &kp V         &kp B            &kp LBKT       &kp RBKT   &kp N      &kp M      &kp COMMA   &kp DOT   &kp FSLH  &kp RSHFT
                                &kp LCTRL    &mt LALT EQUAL  &kp LEFT_COMMAND &kp RET        &kp SPACE  &kp BSPC   &mo 1      &kp DELETE
      >;
    };

    raise_layer {
// --------------------------------------------------------------------------------------------------------------
// |  ESC  |  F1 |  F2 |  F3  |  F4  |  F5  |                   |   F6 |  F7   |  F8   |  F9    |  F10  |  F11  |
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   | home |  pg dn| pf up |  end   | PSCRN |  F12  |
// |OUT_TOG|     |     |      |      |      |                   |  <-  |   v   |  ^    |  ->    | INSERT|       |
// |       |mute |V dn |V up  |      |      |                   |      |       |       |        | MENU  |       |
//                     |      |      |      |        |  |       |      |       |       |
      bindings = <
&kp ESC        &kp F1         &kp F2            &kp F3        &kp F4       &kp F5                             &kp F6       &kp F7        &kp F8        &kp F9        &kp F10     &kp F11
&bt BT_CLR     &bt BT_SEL 0   &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4                       &kp HOME     &kp PG_DN     &kp PG_UP     &kp END       &kp PSCRN   &kp F12
&out OUT_TOG   &trans         &trans            &trans        &trans       &trans                             &kp LEFT     &kp DOWN      &kp UP        &kp RIGHT     &kp INSERT  &trans
&trans         &kp C_MUTE     &kp C_VOL_DN      &kp C_VOL_UP  &trans       &trans      &trans       &trans    &trans       &trans        &trans        &trans        &kp K_CMENU &trans
                                                &trans        &trans       &trans      &trans       &trans    &trans       &trans        &trans
      >;
    };
  };
};
